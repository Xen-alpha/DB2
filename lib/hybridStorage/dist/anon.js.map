{"version":3,"file":"anon.js","sources":["../src/common.ts","../src/anon.ts"],"sourcesContent":["export const STORAGE = Symbol('storage');\r\nexport const NAMESPACE = Symbol('namespace');\r\nexport const NAMESPACEE = Symbol('namespace (encode needed)');\r\nexport const PRE_ENCODED = Symbol('pre encoded');\r\nexport const ENCODE_KEY = Symbol('encode key');\r\nexport const DECODE_KEY = Symbol('decode key');\r\nexport const IS_MY_KEY = Symbol('Is it my key?');\r\n\r\nexport const propOptions = {\r\n    configurable: false,\r\n    enumerable: true,\r\n    writable: false,\r\n};\r\n\r\nexport interface KeyEncoder {\r\n    encoder(key: string): string;\r\n    decoder(key: string): string;\r\n    encodeNamespace?: boolean;\r\n    preEncodable?: boolean;\r\n}\r\n\r\nexport abstract class SyncableStorage {\r\n    protected abstract readonly [STORAGE]: unknown;\r\n    protected readonly [NAMESPACE]: string = '';\r\n    protected readonly [NAMESPACEE]: string = '';\r\n    protected readonly [PRE_ENCODED]?: boolean;\r\n\r\n    abstract readonly isRoot: boolean;\r\n    abstract readonly needRefresh: boolean;\r\n\r\n    abstract get size(): number;\r\n\r\n    abstract clear?(): PromiseLike<any>;\r\n    abstract delete(key: string): PromiseLike<any>;\r\n    abstract deleteAll(keysArg: string[], ...keys: string[]): PromiseLike<any>;\r\n    abstract forEach(\r\n        callbackfn: (value: string, key: string, map: this) => void,\r\n        thisArg?: any\r\n    ): void;\r\n    abstract get(key: string): string | null | undefined;\r\n    abstract has(key: string): boolean;\r\n    abstract hasAll(keysArr?: string[], ...keysArg: string[]): boolean;\r\n    abstract set(key: string, value: string): PromiseLike<any>;\r\n    abstract setAll(entries: Record<string, string>): PromiseLike<any>;\r\n    abstract refresh(): PromiseLike<any>;\r\n    abstract keys(): string[];\r\n    abstract values(): Record<string, string>;\r\n    abstract subset(namespace: string, keyEncoder?: KeyEncoder): SyncableStorage;\r\n    abstract copy(keyEncoder: KeyEncoder): SyncableStorage;\r\n\r\n    encodeKey?(key: string): string;\r\n    decodeKey?(key: string): string;\r\n\r\n    protected [ENCODE_KEY](key: string): string {\r\n        if (!this.encodeKey) return this[NAMESPACE] + this[NAMESPACEE] + key;\r\n        if (this[PRE_ENCODED])\r\n            return this[NAMESPACE] + this[NAMESPACEE] + this.encodeKey(key);\r\n        return this[NAMESPACE] + this.encodeKey(this[NAMESPACEE] + key);\r\n    }\r\n\r\n    protected [DECODE_KEY](key: string): string {\r\n        if (!this.decodeKey)\r\n            return key.slice(this[NAMESPACE].length + this[NAMESPACEE].length);\r\n        if (this[PRE_ENCODED])\r\n            return this.decodeKey(\r\n                key.slice(this[NAMESPACE].length + this[NAMESPACEE].length)\r\n            );\r\n        return this.decodeKey(key.slice(this[NAMESPACE].length)).slice(\r\n            this[NAMESPACEE].length\r\n        );\r\n    }\r\n\r\n    protected [IS_MY_KEY](key: string): boolean {\r\n        if (!key.startsWith(this[NAMESPACE])) return false;\r\n        key = key.slice(this[NAMESPACE].length);\r\n\r\n        if (!this.decodeKey || this[PRE_ENCODED])\r\n            return key.startsWith(this[NAMESPACEE]);\r\n        return this.decodeKey(key).startsWith(this[NAMESPACEE]);\r\n    }\r\n}\r\n","import {\r\n    SyncableStorage,\r\n    STORAGE,\r\n    KeyEncoder,\r\n    PRE_ENCODED,\r\n    propOptions,\r\n    NAMESPACE,\r\n    NAMESPACEE,\r\n    IS_MY_KEY,\r\n    ENCODE_KEY,\r\n    DECODE_KEY,\r\n} from './common';\r\n\r\nclass LocalStorage extends SyncableStorage {\r\n    isRoot: boolean;\r\n    protected readonly [STORAGE] = localStorage;\r\n    readonly needRefresh = false;\r\n\r\n    constructor(parent?: LocalStorage, namespace = '', keyEncoder?: KeyEncoder) {\r\n        super();\r\n\r\n        if (keyEncoder) {\r\n            if (!keyEncoder.encoder || !keyEncoder.decoder)\r\n                throw new TypeError('Encoder and decoder must be included');\r\n\r\n            this.encodeKey = keyEncoder.encoder;\r\n            this.decodeKey = keyEncoder.decoder;\r\n\r\n            if (keyEncoder.encodeNamespace && keyEncoder.preEncodable)\r\n                namespace = keyEncoder.encoder(namespace);\r\n\r\n            Object.defineProperty(this, PRE_ENCODED, {\r\n                value: keyEncoder.preEncodable,\r\n            });\r\n        }\r\n\r\n        this.isRoot = !parent;\r\n\r\n        Object.defineProperties(this, {\r\n            isRoot: propOptions,\r\n            [NAMESPACE]: {\r\n                value:\r\n                    (parent ? parent[NAMESPACE] : '') +\r\n                    (keyEncoder && keyEncoder.encodeNamespace ? '' : namespace),\r\n                ...propOptions,\r\n            },\r\n            [NAMESPACEE]: {\r\n                value:\r\n                    (parent ? parent[NAMESPACEE] : '') +\r\n                    (keyEncoder && keyEncoder.encodeNamespace ? namespace : ''),\r\n                ...propOptions,\r\n            },\r\n        });\r\n    }\r\n\r\n    clear() {\r\n        if (this.isRoot) throw new TypeError('Root storage cannot be cleared');\r\n\r\n        for (const key in this[STORAGE]) {\r\n            if (this[IS_MY_KEY](key)) this[STORAGE].removeItem(key);\r\n        }\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    delete(key: string) {\r\n        if (!key)\r\n            throw new TypeError(\r\n                \"Failed to execute 'delete' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n            );\r\n\r\n        this[STORAGE].removeItem(this[ENCODE_KEY](key));\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    deleteAll(keysArg?: string[], ...keys: string[]) {\r\n        if (Array.isArray(keysArg)) keys = keysArg;\r\n        else if (!keys.length)\r\n            throw new TypeError(\r\n                \"Failed to execute 'deleteAll' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n            );\r\n\r\n        for (const key of keys) this[STORAGE].removeItem(this[ENCODE_KEY](key));\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    forEach(\r\n        callbackfn: (value: string, key: string, map: this) => unknown,\r\n        thisArg?: unknown\r\n    ) {\r\n        for (const key in this[STORAGE]) {\r\n            if (this[IS_MY_KEY](key))\r\n                callbackfn.call(\r\n                    thisArg,\r\n                    this[STORAGE][key],\r\n                    this[DECODE_KEY](key),\r\n                    this\r\n                );\r\n        }\r\n    }\r\n\r\n    get(key: string) {\r\n        if (key) return this[STORAGE].getItem(this[ENCODE_KEY](key));\r\n        throw new TypeError(\r\n            \"Failed to execute 'get' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n        );\r\n    }\r\n\r\n    has(key: string) {\r\n        if (key) return this[ENCODE_KEY](key) in this[STORAGE];\r\n        throw new TypeError(\r\n            \"Failed to execute 'has' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n        );\r\n    }\r\n\r\n    hasAll(keysArg?: string[], ...keys: string[]) {\r\n        if (keysArg) keys = keysArg;\r\n        else if (!keys.length)\r\n            throw new TypeError(\r\n                \"Failed to execute 'hasAll' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n            );\r\n\r\n        let missing = false;\r\n\r\n        for (const key of keys) {\r\n            if (!(this[ENCODE_KEY](key) in this[STORAGE])) {\r\n                missing = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return !missing;\r\n    }\r\n\r\n    set(key: string, value: string) {\r\n        if (key) {\r\n            this[STORAGE].setItem(this[ENCODE_KEY](key), value);\r\n            return Promise.resolve(true);\r\n        }\r\n        throw new TypeError(\r\n            \"Failed to execute 'set' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n        );\r\n    }\r\n\r\n    setAll(entries: Record<string, string>) {\r\n        if (entries) {\r\n            for (const key in entries)\r\n                this[STORAGE].setItem(this[ENCODE_KEY](key), entries[key]);\r\n            return Promise.resolve(true);\r\n        }\r\n        throw new TypeError(\r\n            \"Failed to execute 'setAll' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n        );\r\n    }\r\n\r\n    refresh() {\r\n        return Promise.resolve(this);\r\n    }\r\n\r\n    keys() {\r\n        const keys: string[] = [];\r\n\r\n        for (const key in this[STORAGE]) {\r\n            if (this[IS_MY_KEY](key)) keys.push(this[DECODE_KEY](key));\r\n        }\r\n\r\n        return keys;\r\n    }\r\n\r\n    values() {\r\n        const values: Record<string, string> = {};\r\n\r\n        for (const key in this[STORAGE]) {\r\n            if (this[IS_MY_KEY](key))\r\n                values[this[DECODE_KEY](key)] = this[STORAGE][key];\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    subset(namespace: string, keyEncoder?: KeyEncoder): LocalStorage {\r\n        if (!namespace)\r\n            throw new TypeError(\r\n                \"Failed to execute 'subset' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n            );\r\n        if (!keyEncoder && this[NAMESPACEE]) {\r\n            keyEncoder = {\r\n                encoder: this.encodeKey as any,\r\n                decoder: this.decodeKey as any,\r\n                encodeNamespace: true,\r\n                preEncodable: this[PRE_ENCODED],\r\n            };\r\n        }\r\n        if (keyEncoder && (!keyEncoder.encoder || !keyEncoder.decoder))\r\n            throw new TypeError('Encoder and decoder must be included');\r\n\r\n        return new LocalStorage(this, namespace, keyEncoder);\r\n    }\r\n\r\n    copy(keyEncoder: KeyEncoder): LocalStorage {\r\n        if (!keyEncoder)\r\n            throw new TypeError(\r\n                \"Failed to execute 'copy' on 'LocalStorage': 1 argument required, but only 0 present.\"\r\n            );\r\n        if (!keyEncoder.encoder || !keyEncoder.decoder)\r\n            throw new TypeError('Encoder and decoder must be included');\r\n\r\n        keyEncoder.encodeNamespace = false;\r\n\r\n        return new LocalStorage(this, '', keyEncoder);\r\n    }\r\n\r\n    get size() {\r\n        let count = 0;\r\n\r\n        for (const key in this[STORAGE]) {\r\n            if (this[IS_MY_KEY](key)) count++;\r\n        }\r\n\r\n        return count;\r\n    }\r\n}\r\n\r\n//@ts-ignore\r\nexport = new LocalStorage() as SyncableStorage;\r\n"],"names":["_a"],"mappings":"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"}